import React from "react";

import Head from "next/head";
import Link from "next/link";
import Image from "next/image";

import { Formik, Field, Form } from "formik";
import _ from "lodash";

import TwitchContainer from "./twitch";

/* ====================================================== */
/*                         Hooks                          */
/* ====================================================== */

import { useSelector, useDispatch } from "react-redux";

/* ====================================================== */
/*                   Actions / Selectors                  */
/* ====================================================== */

import { addStreamer, removeStreamer, resetList } from "Redux/actions";

/* ====================================================== */
/*                         Styles                         */
/* ====================================================== */

import styles from "Styles/Home.module.css";

/* ====================================================== */
/*                    Implementation                      */
/* ====================================================== */

export default function Home() {
  const dispatch = useDispatch();
  const streamers = useSelector((state) => state.streamers);

  if (_.size(streamers)) {
    return <TwitchContainer myList={streamers} />;
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Script
        src="https://connect.facebook.net/en_US/sdk.js"
        strategy="lazyOnload"
        onLoad={() =>
          console.log(`script loaded correctly, window.FB has been populated`)
        }
      /> */}
      <header className={styles.header}>
        <h1>
          Watch <Link href="/twitch">twitch</Link> page
        </h1>
        <Formik
          initialValues={{
            streamerName: "",
          }}
          onSubmit={async (values, { resetForm }) => {
            console.log(">>>>> resetForm:", resetForm);
            const { streamerName } = values;
            dispatch(addStreamer(streamerName));
          }}
        >
          <Form>
            <label htmlFor="streamerName">Streamer</label>
            <Field
              id="streamerName"
              name="streamerName"
              placeholder="Twitch channel"
            />

            <button type="submit">Submit</button>
          </Form>
        </Formik>
      </header>

      <main className={styles.main}>
        <Formik
          initialValues={{
            streamerName: "",
          }}
          onSubmit={async (values, { resetForm }) => {
            const { streamerName } = values;
            dispatch(addStreamer(streamerName));
          }}
        >
          <Form>
            <label htmlFor="streamerName">Streamer</label>
            <Field
              id="streamerName"
              name="streamerName"
              placeholder="Twitch channel"
            />

            <button type="submit">Submit</button>
          </Form>
        </Formik>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
